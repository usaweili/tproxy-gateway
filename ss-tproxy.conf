## mode
#mode='global'
mode='gfwlist'
#mode_chnonly='true'   # mode='gfwlist'时有效,切换 chnonly/gfwlist 之前请删除 gfwlist.txt 文件
#mode='chnroute'

## proxy
# vmess://xxxxx  代理节点配置 URI(V2rayN 生成)
proxy_uri='vmess:/'
proxy_server=()       # 服务器的地址，若已配置 proxy_uri 则无需配置
proxy_tproxy='false'   # 纯TPROXY方式
proxy_dports=''        # 服务器的端口
proxy_tcport='60080'   # TCP 监听端口
proxy_udport='60080'   # UDP 监听端口
proxy_runcmd='run_v2ray'  # 启动的命令行
proxy_kilcmd='kill -9 $(pidof v2ray) &>/dev/null'  # 停止的命令行
proxy_ipv6='false'     # ipv6支持，目前只支持关闭(通过查询 DNS 只返回 ipv4 地址实现)

# Koolproxy
ad_filter='kp'

## dnsmasq
dnsmasq_cache_size='10240'              # DNS 缓存条目
dnsmasq_cache_time='3600'               # DNS 缓存时间
dnsmasq_log_enable='false'              # 是否记录日志
dnsmasq_log_file='/var/log/dnsmasq.log' # 日志文件路径
dnsmasq_addn_hosts='/etc/ss-tproxy/hosts' #自定义 hosts 文件路径

## chinadns
chinadns_mutation='false'                # DNS 压缩指针
chinadns_verbose='false'                 # 记录详细日志
chinadns_logfile='/var/log/chinadns.log' # 日志文件路径

## dns
dns_modify='true'            # 直接修改 resolv.conf,建议为ture
dns_remote='8.8.8.8:53'      # 国外 DNS，必须指定端口
dns_direct='114.114.114.114' # 国内 DNS，不能指定端口

## ipts
ipts_rt_tab='100'              # iproute2 路由表名或 ID
ipts_rt_mark='0x2333'          # iproute2 策略路由的标记
ipts_non_snat='false'           # 不设置 SNAT iptables 规则
ipts_intranet=(10.0.0.0/8 192.168.0.0/16) # 内网网段，多个请用空格隔开
ipts_non_proxy=(10.1.1.253)     # 配置不走代理及广告过滤的内网ip地址，多个ip请用空格隔开

## opts
opts_ss_netstat="auto"  # 'auto|ss|netstat'，使用哪个端口检测命令

## file
file_gfwlist_txt='/etc/ss-tproxy/gfwlist.txt'   # gfwlist 黑名单文件 (默认规则)
file_gfwlist_ext='/etc/ss-tproxy/gfwlist.ext'   # gfwlist 黑名单文件 (扩展规则)
file_chnroute_txt='/etc/ss-tproxy/chnroute.txt' # chnroute 地址段文件 (chinadns)
file_chnroute_set='/etc/ss-tproxy/chnroute.set' # chnroute 地址段文件 (iptables)

function post_start {
  # for koolproxy
  if [ "$ad_filter" = 'kp' ]; then
    mkdir -p /etc/ss-tproxy/koolproxydata
    chown -R daemon:daemon /etc/ss-tproxy/koolproxydata
    su -s/bin/sh -c'/koolproxy/koolproxy -d -p65080 -b/etc/ss-tproxy/koolproxydata' daemon
    if [ "$proxy_tproxy" = 'true' ]; then
        iptables -t mangle -I SSTP_OUT -m owner ! --uid-owner daemon -p tcp -m multiport --dports 80,443 -j RETURN
        iptables -t nat  -I SSTP_OUT -m owner ! --uid-owner daemon -p tcp -m multiport --dports 80,443 -j REDIRECT --to-ports 65080
        for intranet in "${ipts_intranet[@]}"; do
          iptables -t mangle -I SSTP_PRE -m mark ! --mark $ipts_rt_mark -p tcp -m multiport --dports 80,443 -s $intranet ! -d $intranet -j RETURN
          iptables -t nat  -I SSTP_PRE -m mark ! --mark $ipts_rt_mark -p tcp -m multiport --dports 80,443 -s $intranet ! -d $intranet -j REDIRECT --to-ports 65080
        done
    else
        iptables -t nat -I SSTP_OUT -m owner ! --uid-owner daemon -p tcp -m multiport --dports 80,443 -j REDIRECT --to-ports 65080
        for intranet in "${ipts_intranet[@]}"; do
          iptables -t nat -I SSTP_PRE -s $intranet ! -d $intranet -p tcp -m multiport --dports 80,443 -j REDIRECT --to-ports 65080
        done
    fi
  fi
  # return ipv4 only from dns_remote (DROP AAAA RECORDE)
  if [ "$proxy_ipv6" = 'false' ]; then
      iptables -t raw -N SSTP_OUT
      iptables -t raw -A OUTPUT -j SSTP_OUT
      if [ "$mode" = 'gfwlist' ]; then
        iptables -t raw -A SSTP_OUT -p udp -d ${dns_remote%:*} --dport ${dns_remote#*:} -m string --hex-string "|00001c|" --algo bm -j DROP
      else
        iptables -t raw -A OUTPUT -p udp -d 127.0.0.1 --dport 65353 -m string --hex-string "|00001c|" --algo bm -j DROP
      fi
  fi
  # 配置不走代理的ip
  if [ "$proxy_tproxy" = 'true' ]; then
      for intranet in "${ipts_non_proxy[@]}"; do
        iptables -t mangle -I SSTP_PRE -m mark ! --mark $ipts_rt_mark -s $intranet  -j RETURN
        iptables -t nat  -I SSTP_PRE -m mark ! --mark $ipts_rt_mark -s $intranet  -j RETURN
      done
  else
      for intranet in "${ipts_non_proxy[@]}"; do
        iptables -t nat -I SSTP_PRE -s $intranet -j RETURN
      done
  fi
}

function post_stop {
  # kill koolproxy
  # [ "$ad_filter" = 'kp' ] && 
  kill -9 $(pidof koolproxy) &>/dev/null
  # clear iptables for raw table SSTP_OUT and chain
  #if [ "$proxy_ipv6" = 'false' ]; then
  iptables -t raw -D OUTPUT -j SSTP_OUT &>/dev/null
  iptables -t raw -F SSTP_OUT &>/dev/null
  iptables -t raw -X SSTP_OUT &>/dev/null
  #fi
}

function run_v2ray {
  if [ -n "$(/v2ray/v2ray -test -config /etc/ss-tproxy/v2ray.conf | grep 'Configuration OK')" ]; then
    /v2ray/v2ray -config /etc/ss-tproxy/v2ray.conf > /dev/null 2>&1 &
  else
    echo "[ERR] V2ray.conf error, can't start V2ray!" ; exit 1;
  fi
}
